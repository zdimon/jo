CREATE TABLE jo_billing (id SERIAL, title VARCHAR(250), summa NUMERIC(18,2), balance NUMERIC(18,2), credit INT, user_id BIGINT, username VARCHAR(50), type_id INT, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE jo_billing_type (id SERIAL, title VARCHAR(250), code VARCHAR(250), summa INT, credit INT, PRIMARY KEY(id));
CREATE TABLE jo_blacklist (id SERIAL, user_id BIGINT, black_id BIGINT, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE jo_faq_translation (id INT, title VARCHAR(250), description VARCHAR(2500), lang CHAR(2), PRIMARY KEY(id, lang));
CREATE TABLE jo_faq (id SERIAL, pub BOOLEAN DEFAULT 'false', created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE jo_friend (id SERIAL, user_id BIGINT, friend_id BIGINT, status_id INT, del_user BOOLEAN DEFAULT 'false', del_friend BOOLEAN DEFAULT 'false', is_read_user BOOLEAN DEFAULT 'false', is_read_friend BOOLEAN DEFAULT 'false', contact TEXT, from_partner_id BIGINT, to_partner_id BIGINT, request_video BOOLEAN DEFAULT 'false', accept_video BOOLEAN DEFAULT 'false', read_accept BOOLEAN DEFAULT 'false', created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE jo_hotlist (id SERIAL, from_id BIGINT, to_id BIGINT, last_message_id INT, is_new_message BOOLEAN DEFAULT 'false', is_opened BOOLEAN DEFAULT 'false', created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE jo_interest (id SERIAL, user_id BIGINT, interest_id BIGINT, is_read_user BOOLEAN DEFAULT 'false', is_read_interest BOOLEAN DEFAULT 'false', created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE jo_message (id SERIAL, from_id BIGINT, from_username VARCHAR(50), to_id BIGINT, to_username VARCHAR(50), from_partner_id BIGINT, to_partner_id BIGINT, title VARCHAR(100), content VARCHAR(2500), translate VARCHAR(2500), image VARCHAR(250), reply_id INT, type_message VARCHAR(255) DEFAULT 'message', pub BOOLEAN DEFAULT 'true', is_read BOOLEAN DEFAULT 'false', is_reply BOOLEAN DEFAULT 'false', del_from BOOLEAN DEFAULT 'false', del_to BOOLEAN DEFAULT 'false', created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE jo_news_translation (id INT, title VARCHAR(250), description VARCHAR(2500), lang CHAR(2), PRIMARY KEY(id, lang));
CREATE TABLE jo_news (id SERIAL, image VARCHAR(250), pub BOOLEAN DEFAULT 'false', created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE jo_notify_translation (id INT, icontent TEXT, ititle VARCHAR(250), lang CHAR(2), PRIMARY KEY(id, lang));
CREATE TABLE jo_notify (id SERIAL, title VARCHAR(250), PRIMARY KEY(id));
CREATE TABLE jo_page_translation (id INT, icontent TEXT, ititle VARCHAR(250), lang CHAR(2), PRIMARY KEY(id, lang));
CREATE TABLE jo_page (id SERIAL, alias VARCHAR(250), title VARCHAR(250), undel BOOLEAN DEFAULT 'false', PRIMARY KEY(id));
CREATE TABLE jo_payment (id SERIAL, service_id INT, user_id BIGINT, woman_id BIGINT, username VARCHAR(50), partner_id BIGINT, room_id BIGINT, summa NUMERIC(18,2), balanse NUMERIC(18,2), comission NUMERIC(18,2), title VARCHAR(250), description VARCHAR(2500), cost NUMERIC(18,2), is_closed BOOLEAN DEFAULT 'true', created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE jo_photo (id SERIAL, user_id BIGINT, username VARCHAR(50), title VARCHAR(50), image VARCHAR(250), pub BOOLEAN DEFAULT 'false', is_main BOOLEAN DEFAULT 'false', is_private BOOLEAN DEFAULT 'false', size BIGINT, partner_id BIGINT, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE jo_profile (id BIGSERIAL, user_id BIGINT, first_name VARCHAR(255), last_name VARCHAR(255), middle_name VARCHAR(255), real_name VARCHAR(255), gender VARCHAR(255) DEFAULT 'w', city VARCHAR(250), country VARCHAR(2), zip VARCHAR(20), adress VARCHAR(250), phone VARCHAR(250), birthday DATE, height VARCHAR(250), body_type VARCHAR(250), relationship VARCHAR(250), rost VARCHAR(250), ves VARCHAR(250), ethnicity VARCHAR(50), religion VARCHAR(100), marital_status VARCHAR(50), children VARCHAR(250), where_children VARCHAR(250), want_children VARCHAR(250), im VARCHAR(250), occupation VARCHAR(250), language1 VARCHAR(50), language_skill1 VARCHAR(250), language2 VARCHAR(50), language_skill2 VARCHAR(250), language3 VARCHAR(50), language_skill3 VARCHAR(250), education VARCHAR(100), income VARCHAR(250), smoker VARCHAR(250), drinker VARCHAR(250), headline VARCHAR(250), description TEXT, i_can_receive VARCHAR(250), i_look_for_a VARCHAR(250), looking_for_age_from BIGINT, looking_for_age_to BIGINT, looking_for_a_height_from VARCHAR(250), looking_for_a_height_to VARCHAR(250), looking_for_a_body_type_from VARCHAR(250), looking_for_a_body_type_to VARCHAR(250), ideal_match_description VARCHAR(2500), notify_me_about_news BOOLEAN DEFAULT 'true', mobile_phone VARCHAR(250), photo VARCHAR(250), is_active BOOLEAN DEFAULT 'false', is_new_message BOOLEAN DEFAULT 'false', is_new_friend BOOLEAN DEFAULT 'false', is_new_request BOOLEAN DEFAULT 'false', is_new_gift BOOLEAN DEFAULT 'false', is_new_hotlist BOOLEAN DEFAULT 'false', is_empty BOOLEAN DEFAULT 'true', is_online BOOLEAN DEFAULT 'false', with_photo BOOLEAN DEFAULT 'false', with_video BOOLEAN DEFAULT 'false', subtype VARCHAR(255) DEFAULT 'none', most_active_user BIGINT, status_id INT, homepage VARCHAR(250), phone2 VARCHAR(250), icq VARCHAR(250), msn VARCHAR(250), skype VARCHAR(250), zodiac SMALLINT, partner_id INT, can_resive_gift BOOLEAN DEFAULT 'false', skan VARCHAR(250), rating INT, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, object_version VARCHAR(15) DEFAULT '1', PRIMARY KEY(id));
CREATE TABLE jo_profile_type_translation (id INT, title VARCHAR(250), description VARCHAR(2500), lang CHAR(2), PRIMARY KEY(id, lang));
CREATE TABLE jo_profile_type (id SERIAL, PRIMARY KEY(id));
CREATE TABLE jo_service_translation (id INT, title VARCHAR(250), description VARCHAR(2500), lang CHAR(2), PRIMARY KEY(id, lang));
CREATE TABLE jo_service (id SERIAL, cost NUMERIC(18,2), comission NUMERIC(18,2), pub BOOLEAN DEFAULT 'true', show_man BOOLEAN DEFAULT 'false', show_partner BOOLEAN DEFAULT 'false', PRIMARY KEY(id));
CREATE TABLE jo_settings (id BIGSERIAL, var_name VARCHAR(250), var_value VARCHAR(250), var_description VARCHAR(250), pub BOOLEAN DEFAULT 'false', PRIMARY KEY(id));
CREATE TABLE jo_status_friend (id SERIAL, title VARCHAR(100), PRIMARY KEY(id));
CREATE TABLE jo_testimonials (id SERIAL, body VARCHAR(2500), image VARCHAR(250), name VARCHAR(250), pub BOOLEAN DEFAULT 'false', created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE jo_video (id SERIAL, user_id BIGINT, username VARCHAR(50), title VARCHAR(50), file_path VARCHAR(250), pub BOOLEAN DEFAULT 'false', size BIGINT, description VARCHAR(250), format VARCHAR(50), is_convert BOOLEAN DEFAULT 'false', partner_id BIGINT, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE sf_guard_forgot_password (id BIGSERIAL, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at TIMESTAMP NOT NULL, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE sf_guard_group (id BIGSERIAL, name VARCHAR(255) UNIQUE, description VARCHAR(1000), created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(group_id, permission_id));
CREATE TABLE sf_guard_permission (id BIGSERIAL, name VARCHAR(255) UNIQUE, description VARCHAR(1000), created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE sf_guard_remember_key (id BIGSERIAL, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE sf_guard_user (id BIGSERIAL, username VARCHAR(128) UNIQUE, password VARCHAR(128), algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), real_name VARCHAR(128), is_active BOOLEAN DEFAULT 'false', is_partner BOOLEAN DEFAULT 'false', partner_id BIGINT DEFAULT 1, is_super_admin BOOLEAN DEFAULT 'false', last_login TIMESTAMP, pc VARCHAR(128), gender VARCHAR(255) DEFAULT 'w', culture VARCHAR(2), account NUMERIC(18,2) DEFAULT 0, image VARCHAR(250), is_online BOOLEAN DEFAULT 'false', timer INT, email VARCHAR(255) NOT NULL, is_agree BOOLEAN DEFAULT 'false', date_expire DATE, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(id));
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(user_id, group_id));
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at TIMESTAMP NOT NULL, updated_at TIMESTAMP NOT NULL, PRIMARY KEY(user_id, permission_id));
CREATE INDEX is_read_user ON jo_friend (is_read_user);
CREATE INDEX is_read_friend ON jo_friend (is_read_friend);
CREATE INDEX type_message ON jo_message (type_message);
CREATE INDEX to_username ON jo_message (to_username);
CREATE INDEX reply_id ON jo_message (reply_id);
CREATE INDEX from_username ON jo_message (from_username);
CREATE INDEX partner_id ON jo_profile (partner_id);
CREATE INDEX username ON sf_guard_user (username);
CREATE INDEX is_online ON sf_guard_user (is_online);
CREATE INDEX is_active_idx ON sf_guard_user (is_active);
CREATE INDEX email ON sf_guard_user (email);
ALTER TABLE jo_billing ADD CONSTRAINT jo_billing_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_billing ADD CONSTRAINT jo_billing_type_id_jo_billing_type_id FOREIGN KEY (type_id) REFERENCES jo_billing_type(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_blacklist ADD CONSTRAINT jo_blacklist_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_blacklist ADD CONSTRAINT jo_blacklist_black_id_sf_guard_user_id FOREIGN KEY (black_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_faq_translation ADD CONSTRAINT jo_faq_translation_id_jo_faq_id FOREIGN KEY (id) REFERENCES jo_faq(id) ON UPDATE CASCADE ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_friend ADD CONSTRAINT jo_friend_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_friend ADD CONSTRAINT jo_friend_status_id_jo_status_friend_id FOREIGN KEY (status_id) REFERENCES jo_status_friend(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_friend ADD CONSTRAINT jo_friend_friend_id_sf_guard_user_id FOREIGN KEY (friend_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_hotlist ADD CONSTRAINT jo_hotlist_to_id_sf_guard_user_id FOREIGN KEY (to_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_hotlist ADD CONSTRAINT jo_hotlist_last_message_id_jo_message_id FOREIGN KEY (last_message_id) REFERENCES jo_message(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_hotlist ADD CONSTRAINT jo_hotlist_from_id_sf_guard_user_id FOREIGN KEY (from_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_interest ADD CONSTRAINT jo_interest_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_interest ADD CONSTRAINT jo_interest_interest_id_sf_guard_user_id FOREIGN KEY (interest_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_message ADD CONSTRAINT jo_message_to_id_sf_guard_user_id FOREIGN KEY (to_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_message ADD CONSTRAINT jo_message_from_id_sf_guard_user_id FOREIGN KEY (from_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_news_translation ADD CONSTRAINT jo_news_translation_id_jo_news_id FOREIGN KEY (id) REFERENCES jo_news(id) ON UPDATE CASCADE ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_notify_translation ADD CONSTRAINT jo_notify_translation_id_jo_notify_id FOREIGN KEY (id) REFERENCES jo_notify(id) ON UPDATE CASCADE ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_page_translation ADD CONSTRAINT jo_page_translation_id_jo_page_id FOREIGN KEY (id) REFERENCES jo_page(id) ON UPDATE CASCADE ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_payment ADD CONSTRAINT jo_payment_woman_id_sf_guard_user_id FOREIGN KEY (woman_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_payment ADD CONSTRAINT jo_payment_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_payment ADD CONSTRAINT jo_payment_service_id_jo_service_id FOREIGN KEY (service_id) REFERENCES jo_service(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_payment ADD CONSTRAINT jo_payment_partner_id_sf_guard_user_id FOREIGN KEY (partner_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_photo ADD CONSTRAINT jo_photo_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_photo ADD CONSTRAINT jo_photo_partner_id_sf_guard_user_id FOREIGN KEY (partner_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_profile ADD CONSTRAINT jo_profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_profile ADD CONSTRAINT jo_profile_status_id_jo_profile_type_id FOREIGN KEY (status_id) REFERENCES jo_profile_type(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_profile_type_translation ADD CONSTRAINT jo_profile_type_translation_id_jo_profile_type_id FOREIGN KEY (id) REFERENCES jo_profile_type(id) ON UPDATE CASCADE ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_service_translation ADD CONSTRAINT jo_service_translation_id_jo_service_id FOREIGN KEY (id) REFERENCES jo_service(id) ON UPDATE CASCADE ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_video ADD CONSTRAINT jo_video_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE jo_video ADD CONSTRAINT jo_video_partner_id_sf_guard_user_id FOREIGN KEY (partner_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE;
