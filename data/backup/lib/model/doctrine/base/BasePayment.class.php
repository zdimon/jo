<?php

/**
 * BasePayment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $service_id
 * @property integer $user_id
 * @property integer $woman_id
 * @property string $username
 * @property integer $partner_id
 * @property integer $room_id
 * @property decimal $summa
 * @property decimal $balanse
 * @property decimal $comission
 * @property string $title
 * @property string $description
 * @property decimal $cost
 * @property boolean $is_closed
 * @property sfGuardUser $User
 * @property sfGuardUser $Partner
 * @property sfGuardUser $Woman
 * @property Service $Service
 * 
 * @method integer     getId()          Returns the current record's "id" value
 * @method integer     getServiceId()   Returns the current record's "service_id" value
 * @method integer     getUserId()      Returns the current record's "user_id" value
 * @method integer     getWomanId()     Returns the current record's "woman_id" value
 * @method string      getUsername()    Returns the current record's "username" value
 * @method integer     getPartnerId()   Returns the current record's "partner_id" value
 * @method integer     getRoomId()      Returns the current record's "room_id" value
 * @method decimal     getSumma()       Returns the current record's "summa" value
 * @method decimal     getBalanse()     Returns the current record's "balanse" value
 * @method decimal     getComission()   Returns the current record's "comission" value
 * @method string      getTitle()       Returns the current record's "title" value
 * @method string      getDescription() Returns the current record's "description" value
 * @method decimal     getCost()        Returns the current record's "cost" value
 * @method boolean     getIsClosed()    Returns the current record's "is_closed" value
 * @method sfGuardUser getUser()        Returns the current record's "User" value
 * @method sfGuardUser getPartner()     Returns the current record's "Partner" value
 * @method sfGuardUser getWoman()       Returns the current record's "Woman" value
 * @method Service     getService()     Returns the current record's "Service" value
 * @method Payment     setId()          Sets the current record's "id" value
 * @method Payment     setServiceId()   Sets the current record's "service_id" value
 * @method Payment     setUserId()      Sets the current record's "user_id" value
 * @method Payment     setWomanId()     Sets the current record's "woman_id" value
 * @method Payment     setUsername()    Sets the current record's "username" value
 * @method Payment     setPartnerId()   Sets the current record's "partner_id" value
 * @method Payment     setRoomId()      Sets the current record's "room_id" value
 * @method Payment     setSumma()       Sets the current record's "summa" value
 * @method Payment     setBalanse()     Sets the current record's "balanse" value
 * @method Payment     setComission()   Sets the current record's "comission" value
 * @method Payment     setTitle()       Sets the current record's "title" value
 * @method Payment     setDescription() Sets the current record's "description" value
 * @method Payment     setCost()        Sets the current record's "cost" value
 * @method Payment     setIsClosed()    Sets the current record's "is_closed" value
 * @method Payment     setUser()        Sets the current record's "User" value
 * @method Payment     setPartner()     Sets the current record's "Partner" value
 * @method Payment     setWoman()       Sets the current record's "Woman" value
 * @method Payment     setService()     Sets the current record's "Service" value
 * 
 * @package    levandos
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePayment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('jo_payment');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('service_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('woman_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('username', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('partner_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('room_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('summa', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 2,
             ));
        $this->hasColumn('balanse', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 2,
             ));
        $this->hasColumn('comission', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 2,
             ));
        $this->hasColumn('title', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('description', 'string', 2500, array(
             'type' => 'string',
             'length' => 2500,
             ));
        $this->hasColumn('cost', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 2,
             ));
        $this->hasColumn('is_closed', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as Partner', array(
             'local' => 'partner_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as Woman', array(
             'local' => 'woman_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Service', array(
             'local' => 'service_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}