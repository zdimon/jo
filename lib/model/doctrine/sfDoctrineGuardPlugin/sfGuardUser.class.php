<?php

/**
 * sfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    levandos
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class sfGuardUser extends PluginsfGuardUser
{


     public function  __toString() {


        if(strlen($this->getRealName())>0)
        return $this->getRealName();

             return $this->getUsername();



    }

   public function  getListInfo() {


        return '['.$this->id.'] '.$this->getProfile()->getFirstName().' '.$this->getProfile()->getLastName();


    }


    public function getOnlineIndicator()
    {
        if($this->is_online==1)
        {
          $str = '<div class="online">'.__('онлайн').'</div>';
        }
       else
        {
          $str = '<div class="offline">'.__('оффлайн').'</div>';
        }

        return $str;
    }

    public function getOnlineIcon()
    {

        if(sfContext::getInstance()->getUser()->isAuthenticated())
        {
            if(sfContext::getInstance()->getUser()->hasCredential('admin'))
            {

                if($this->getIsOnline()==1)
                {
                    $str = link_to(image_tag('/images/icons/chat_online.png'),'superlogin/index?user='.$this->getId());
                }
                else
                {
                    $str = link_to(image_tag('/images/icons/chat_offline.png'),'superlogin/index?user='.$this->getId());
                }

                return $str;

            }
        }

        if($this->getIsOnline()==1)
        {
            $str = image_tag('/images/icons/chat_online.png');
        }
        else
        {
            $str = image_tag('/images/icons/chat_offline.png');
        }

        return $str;
    }

    public function setIsOnline($value)
    {
       
         $this->_set('is_online', $value);
		 $this->_set('is_fake_online', false);
         if($pf = $this->getProfile())
         {
             $pf->setIsOnline($value);

             if($value==false)
             {
                 $pf->setIsChat(false);
                 $pf->setIsCamera(false);
                // $this->removeFalses();
             }
             
             if($value==true)
             {
                // $this->setFalses();
             }
             $pf->save();
         }
    }
    
    private function removeFalses()
    {

        
       $it = sfGuardUserTable::getInstance()->createQuery('a')->where('a.owner_id=?',array($this->getId()))->execute();
       foreach ($it as $i)
       {
        Doctrine_Query::create()->update('sfGuardUser')->set('is_online','false')->where('id='.$i->getId())->execute();
        Doctrine_Query::create()->update('Profile')->set('is_online','false')->where('user_id='.$i->getId())->execute();
       }         
    }
    
        private function setFalses()
    {
               $it = sfGuardUserTable::getInstance()->createQuery('a')->where('a.owner_id=?',array($this->getId()))->execute();
       foreach ($it as $i)
       {
        Doctrine_Query::create()->update('sfGuardUser')->set('is_online','true')->where('id='.$i->getId())->execute();
        Doctrine_Query::create()->update('Profile')->set('is_online','true')->where('user_id='.$i->getId())->execute();
       } 
        
        
    }

        public function setPassword($value)
    {
         if(strlen($value)>0)
         {
         $this->_set('pc', $value);
         parent::setPassword($value);
         }
        
    }

     public function getAntiGender()
    {
         if($this->gender=='m')
         {
             return 'w';
         }
         if($this->gender=='w')
         {
             return 'm';
         }


    }


        ///Новые сообщения
    public function isNewMessage() {

               if($pf=$this->getProfile())
               {
                 if($pf->getIsNewMessage())
                 {
                   $str = image_tag('/images/icons/new_message.gif',array('class'=>'new_icon','title'=>__('У вас есть новые сообщения!')));
                   return $str;
                 }
               }
               return '';

	}

          public function getProfile() {
              $pf = ProfileTable::getProfileById($this->id);
              if($pf)
              {
                  return $pf;
              }
              else
              {
                 return false;
              }
          }
          
          public function getPartnerProfile() {
              $pf = ProfilePartnerTable::getProfileById($this->id);
              if($pf)
              {
                  return $pf;
              }
              else
              {
                 return false;
              }
          }

    public function  getLinkImage() {

         if(strlen($this->image)>0)
        {
          return link_to(image_tag('/uploads/photo/thumbnail/'.$this->getImage(),array('title'=>$this)),'profile/show?username='.$this->getUsername(),array('class'=>'avatar'));
        }
        else
        {
          if($this->gender=='m')
          {
            return link_to(image_tag('/images/icons/no_avatar_man.jpg',array('title'=>$this)),'profile/show?username='.$this->getUsername(),array('class'=>'avatar'));
          }
          else
          {
            return link_to(image_tag('/images/icons/no_avatar_woman.jpg',array('title'=>$this)),'profile/show?username='.$this->getUsername(),array('class'=>'avatar'));
          }
        }

    }


        public function  getLinkImageSmall() {

         if(strlen($this->image)>0)
        {
          return link_to(image_tag('/uploads/photo/_thumbnail/'.$this->getImage(),array('title'=>$this)),'profile/show?username='.$this->getUsername(),array('class'=>'avatar'));
        }
        else
        {
          if($this->gender=='m')
          {
            return link_to(image_tag('/images/icons/_no_avatar_man.jpg',array('title'=>$this)),'profile/show?username='.$this->getUsername(),array('class'=>'avatar'));
          }
          else
          {
            return link_to(image_tag('/images/icons/_no_avatar_woman.jpg',array('title'=>$this)),'profile/show?username='.$this->getUsername(),array('class'=>'avatar'));
          }
        }

    }


        public function  getUrlImage() {

         if(strlen($this->image)>0)
        {
          return '/uploads/photo/thumbnail/'.$this->getImage();
        }
        else
        {
          if($this->gender=='m')
          {
            return '/images/icons/no_avatar_man.jpg';
          }
          else
          {
            return '/images/icons/no_avatar_woman.jpg';
          }
        }

    }


        public function  getUrlImageSmall() {

         if(strlen($this->image)>0)
        {
          return '/uploads/photo/_thumbnail/'.$this->getImage();
        }
        else
        {
          if($this->gender=='m')
          {
            return '/images/icons/_no_avatar_man.jpg';
          }
          else
          {
            return '/images/icons/_no_avatar_woman.jpg';
          }
        }

    }


     public function delete(Doctrine_Connection $conn = null)
    {
         ///Удаляем профайлы
         $pr = $this->getProfile();
         if($pr) $pr->delete();

        // $prp = $this->getProfilePartner();
        // if($prp) $prp->delete();

         /// Удаляем платежи

         parent::delete();
        

    }

       



}