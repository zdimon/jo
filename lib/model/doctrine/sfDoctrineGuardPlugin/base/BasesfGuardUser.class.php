<?php

/**
 * BasesfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $username
 * @property string $password
 * @property string $algorithm
 * @property string $salt
 * @property string $real_name
 * @property boolean $is_active
 * @property boolean $is_partner
 * @property integer $partner_id
 * @property boolean $is_super_admin
 * @property timestamp $last_login
 * @property string $pc
 * @property string $gender
 * @property string $culture
 * @property decimal $account
 * @property string $image
 * @property boolean $is_online
 * @property integer $timer
 * @property string $email
 * @property boolean $is_agree
 * @property date $date_expire
 * @property boolean $is_staff
 * @property boolean $is_false
  * @property boolean $is_fake_online
 * @property integer $owner_id
 * @property Doctrine_Collection $Groups
 * @property Doctrine_Collection $Permissions
 * @property Doctrine_Collection $sfGuardUserPermission
 * @property Doctrine_Collection $sfGuardUserGroup
 * @property sfGuardRememberKey $RememberKeys
 * @property sfGuardForgotPassword $ForgotPassword
 * @property Doctrine_Collection $sfForumCategory
 * @property sfForumProfile $sfForumProfile
 * @property Doctrine_Collection $sfForumTopic
 * @property Doctrine_Collection $sfForumMessage
 * @property Doctrine_Collection $Actions
 * @property Doctrine_Collection $ChatAppointment
 * @property Doctrine_Collection $Liqpay
 * @property Doctrine_Collection $ScamerReport
 * @property Doctrine_Collection $User2Keyword
 * @property Doctrine_Collection $Mailer
 * @property Profile $Profile
 * @property Doctrine_Collection $Photo
 * @property Doctrine_Collection $Video
 * @property Doctrine_Collection $Message
 * @property Doctrine_Collection $Friend
 * @property Doctrine_Collection $Payment
 * @property Doctrine_Collection $Hotlist
 * @property Doctrine_Collection $Hotlistlog
 * @property Doctrine_Collection $Blacklist
 * @property Doctrine_Collection $Billing
 * @property Doctrine_Collection $Interest
 * @property Doctrine_Collection $Viewed
 * @property Doctrine_Collection $Chat2Room
 * @property Doctrine_Collection $Chat2Message
 * @property Doctrine_Collection $Chat2RoomUsers
 * @property Doctrine_Collection $Chat2VideoLog
 * 
 * @method string                getUsername()              Returns the current record's "username" value
 * @method string                getPassword()              Returns the current record's "password" value
 * @method string                getAlgorithm()             Returns the current record's "algorithm" value
 * @method string                getSalt()                  Returns the current record's "salt" value
 * @method string                getRealName()              Returns the current record's "real_name" value
 * @method boolean               getIsActive()              Returns the current record's "is_active" value
 * @method boolean               getIsPartner()             Returns the current record's "is_partner" value
 * @method integer               getPartnerId()             Returns the current record's "partner_id" value
 * @method boolean               getIsSuperAdmin()          Returns the current record's "is_super_admin" value
 * @method timestamp             getLastLogin()             Returns the current record's "last_login" value
 * @method string                getPc()                    Returns the current record's "pc" value
 * @method string                getGender()                Returns the current record's "gender" value
 * @method string                getCulture()               Returns the current record's "culture" value
 * @method decimal               getAccount()               Returns the current record's "account" value
 * @method string                getImage()                 Returns the current record's "image" value
 * @method boolean               getIsOnline()              Returns the current record's "is_online" value
 * @method integer               getTimer()                 Returns the current record's "timer" value
 * @method string                getEmail()                 Returns the current record's "email" value
 * @method boolean               getIsAgree()               Returns the current record's "is_agree" value
 * @method date                  getDateExpire()            Returns the current record's "date_expire" value
 * @method boolean               getIsStaff()               Returns the current record's "is_staff" value
 * @method boolean               getIsFalse()               Returns the current record's "is_false" value
  * @method boolean               getIsFakeOnline()               Returns the current record's "is_fake_online" value
 * @method integer               getOwnerId()               Returns the current record's "owner_id" value
 * @method Doctrine_Collection   getGroups()                Returns the current record's "Groups" collection
 * @method Doctrine_Collection   getPermissions()           Returns the current record's "Permissions" collection
 * @method Doctrine_Collection   getSfGuardUserPermission() Returns the current record's "sfGuardUserPermission" collection
 * @method Doctrine_Collection   getSfGuardUserGroup()      Returns the current record's "sfGuardUserGroup" collection
 * @method sfGuardRememberKey    getRememberKeys()          Returns the current record's "RememberKeys" value
 * @method sfGuardForgotPassword getForgotPassword()        Returns the current record's "ForgotPassword" value
 * @method Doctrine_Collection   getSfForumCategory()       Returns the current record's "sfForumCategory" collection
 * @method sfForumProfile        getSfForumProfile()        Returns the current record's "sfForumProfile" value
 * @method Doctrine_Collection   getSfForumTopic()          Returns the current record's "sfForumTopic" collection
 * @method Doctrine_Collection   getSfForumMessage()        Returns the current record's "sfForumMessage" collection
 * @method Doctrine_Collection   getActions()               Returns the current record's "Actions" collection
 * @method Doctrine_Collection   getChatAppointment()       Returns the current record's "ChatAppointment" collection
 * @method Doctrine_Collection   getLiqpay()                Returns the current record's "Liqpay" collection
 * @method Doctrine_Collection   getScamerReport()          Returns the current record's "ScamerReport" collection
 * @method Doctrine_Collection   getUser2Keyword()          Returns the current record's "User2Keyword" collection
 * @method Doctrine_Collection   getMailer()                Returns the current record's "Mailer" collection
 * @method Profile               getProfile()               Returns the current record's "Profile" value
 * @method Doctrine_Collection   getPhoto()                 Returns the current record's "Photo" collection
 * @method Doctrine_Collection   getVideo()                 Returns the current record's "Video" collection
 * @method Doctrine_Collection   getMessage()               Returns the current record's "Message" collection
 * @method Doctrine_Collection   getFriend()                Returns the current record's "Friend" collection
 * @method Doctrine_Collection   getPayment()               Returns the current record's "Payment" collection
 * @method Doctrine_Collection   getHotlist()               Returns the current record's "Hotlist" collection
 * @method Doctrine_Collection   getHotlistlog()            Returns the current record's "Hotlistlog" collection
 * @method Doctrine_Collection   getBlacklist()             Returns the current record's "Blacklist" collection
 * @method Doctrine_Collection   getBilling()               Returns the current record's "Billing" collection
 * @method Doctrine_Collection   getInterest()              Returns the current record's "Interest" collection
 * @method Doctrine_Collection   getViewed()                Returns the current record's "Viewed" collection
 * @method Doctrine_Collection   getChat2Room()             Returns the current record's "Chat2Room" collection
 * @method Doctrine_Collection   getChat2Message()          Returns the current record's "Chat2Message" collection
 * @method Doctrine_Collection   getChat2RoomUsers()        Returns the current record's "Chat2RoomUsers" collection
 * @method Doctrine_Collection   getChat2VideoLog()         Returns the current record's "Chat2VideoLog" collection
 * @method sfGuardUser           setUsername()              Sets the current record's "username" value
 * @method sfGuardUser           setPassword()              Sets the current record's "password" value
 * @method sfGuardUser           setAlgorithm()             Sets the current record's "algorithm" value
 * @method sfGuardUser           setSalt()                  Sets the current record's "salt" value
 * @method sfGuardUser           setRealName()              Sets the current record's "real_name" value
 * @method sfGuardUser           setIsActive()              Sets the current record's "is_active" value
 * @method sfGuardUser           setIsPartner()             Sets the current record's "is_partner" value
 * @method sfGuardUser           setPartnerId()             Sets the current record's "partner_id" value
 * @method sfGuardUser           setIsSuperAdmin()          Sets the current record's "is_super_admin" value
 * @method sfGuardUser           setLastLogin()             Sets the current record's "last_login" value
 * @method sfGuardUser           setPc()                    Sets the current record's "pc" value
 * @method sfGuardUser           setGender()                Sets the current record's "gender" value
 * @method sfGuardUser           setCulture()               Sets the current record's "culture" value
 * @method sfGuardUser           setAccount()               Sets the current record's "account" value
 * @method sfGuardUser           setImage()                 Sets the current record's "image" value
 * @method sfGuardUser           setIsOnline()              Sets the current record's "is_online" value
 * @method sfGuardUser           setTimer()                 Sets the current record's "timer" value
 * @method sfGuardUser           setEmail()                 Sets the current record's "email" value
 * @method sfGuardUser           setIsAgree()               Sets the current record's "is_agree" value
 * @method sfGuardUser           setDateExpire()            Sets the current record's "date_expire" value
 * @method sfGuardUser           setIsStaff()               Sets the current record's "is_staff" value
 * @method sfGuardUser           setIsFalse()               Sets the current record's "is_false" value
 * @method sfGuardUser           setIsFakeOnline()          Sets the current record's "is_fake_online" value
 * @method sfGuardUser           setOwnerId()               Sets the current record's "owner_id" value
 * @method sfGuardUser           setGroups()                Sets the current record's "Groups" collection
 * @method sfGuardUser           setPermissions()           Sets the current record's "Permissions" collection
 * @method sfGuardUser           setSfGuardUserPermission() Sets the current record's "sfGuardUserPermission" collection
 * @method sfGuardUser           setSfGuardUserGroup()      Sets the current record's "sfGuardUserGroup" collection
 * @method sfGuardUser           setRememberKeys()          Sets the current record's "RememberKeys" value
 * @method sfGuardUser           setForgotPassword()        Sets the current record's "ForgotPassword" value
 * @method sfGuardUser           setSfForumCategory()       Sets the current record's "sfForumCategory" collection
 * @method sfGuardUser           setSfForumProfile()        Sets the current record's "sfForumProfile" value
 * @method sfGuardUser           setSfForumTopic()          Sets the current record's "sfForumTopic" collection
 * @method sfGuardUser           setSfForumMessage()        Sets the current record's "sfForumMessage" collection
 * @method sfGuardUser           setActions()               Sets the current record's "Actions" collection
 * @method sfGuardUser           setChatAppointment()       Sets the current record's "ChatAppointment" collection
 * @method sfGuardUser           setLiqpay()                Sets the current record's "Liqpay" collection
 * @method sfGuardUser           setScamerReport()          Sets the current record's "ScamerReport" collection
 * @method sfGuardUser           setUser2Keyword()          Sets the current record's "User2Keyword" collection
 * @method sfGuardUser           setMailer()                Sets the current record's "Mailer" collection
 * @method sfGuardUser           setProfile()               Sets the current record's "Profile" value
 * @method sfGuardUser           setPhoto()                 Sets the current record's "Photo" collection
 * @method sfGuardUser           setVideo()                 Sets the current record's "Video" collection
 * @method sfGuardUser           setMessage()               Sets the current record's "Message" collection
 * @method sfGuardUser           setFriend()                Sets the current record's "Friend" collection
 * @method sfGuardUser           setPayment()               Sets the current record's "Payment" collection
 * @method sfGuardUser           setHotlist()               Sets the current record's "Hotlist" collection
 * @method sfGuardUser           setHotlistlog()            Sets the current record's "Hotlistlog" collection
 * @method sfGuardUser           setBlacklist()             Sets the current record's "Blacklist" collection
 * @method sfGuardUser           setBilling()               Sets the current record's "Billing" collection
 * @method sfGuardUser           setInterest()              Sets the current record's "Interest" collection
 * @method sfGuardUser           setViewed()                Sets the current record's "Viewed" collection
 * @method sfGuardUser           setChat2Room()             Sets the current record's "Chat2Room" collection
 * @method sfGuardUser           setChat2Message()          Sets the current record's "Chat2Message" collection
 * @method sfGuardUser           setChat2RoomUsers()        Sets the current record's "Chat2RoomUsers" collection
 * @method sfGuardUser           setChat2VideoLog()         Sets the current record's "Chat2VideoLog" collection
 * 
 * @package    levandos
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user');
        $this->hasColumn('username', 'string', 128, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 128,
             ));
        $this->hasColumn('password', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('algorithm', 'string', 128, array(
             'type' => 'string',
             'default' => 'sha1',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('salt', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('real_name', 'string', 128, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 128,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_partner', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('partner_id', 'integer', null, array(
             'type' => 'integer',
             'default' => 1,
             ));
        $this->hasColumn('is_super_admin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('pc', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('gender', 'string', 2, array(
             'type' => 'string',
             'length' => 2,
             ));
        $this->hasColumn('culture', 'string', 2, array(
             'type' => 'string',
             'length' => 2,
             ));
        $this->hasColumn('account', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 2,
             'default' => 0,
             ));
        $this->hasColumn('image', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('is_online', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('timer', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'email' => true,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_agree', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('date_expire', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('is_staff', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_false', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
		$this->hasColumn('is_fake_online', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('owner_id', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('is_active_idx', array(
             'fields' => 
             array(
              0 => 'is_active',
             ),
             ));
        $this->index('email', array(
             'fields' => 
             array(
              0 => 'email',
             ),
             ));
        $this->index('username', array(
             'fields' => 
             array(
              0 => 'username',
             ),
             ));
        $this->index('is_online', array(
             'fields' => 
             array(
              0 => 'is_online',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardGroup as Groups', array(
             'refClass' => 'sfGuardUserGroup',
             'local' => 'user_id',
             'foreign' => 'group_id'));

        $this->hasMany('sfGuardPermission as Permissions', array(
             'refClass' => 'sfGuardUserPermission',
             'local' => 'user_id',
             'foreign' => 'permission_id'));

        $this->hasMany('sfGuardUserPermission', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUserGroup', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardRememberKey as RememberKeys', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardForgotPassword as ForgotPassword', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('sfForumCategory', array(
             'local' => 'id',
             'foreign' => 'author'));

        $this->hasOne('sfForumProfile', array(
             'local' => 'id',
             'foreign' => 'sf_guard_user_id'));

        $this->hasMany('sfForumTopic', array(
             'local' => 'id',
             'foreign' => 'author'));

        $this->hasMany('sfForumMessage', array(
             'local' => 'id',
             'foreign' => 'author'));

        $this->hasMany('Actions', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ChatAppointment', array(
             'local' => 'id',
             'foreign' => 'man_id'));

        $this->hasMany('Liqpay', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ScamerReport', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('User2Keyword', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Mailer', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('Profile', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Photo', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Video', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Message', array(
             'local' => 'id',
             'foreign' => 'from_id'));

        $this->hasMany('Friend', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Payment', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Hotlist', array(
             'local' => 'id',
             'foreign' => 'from_id'));

        $this->hasMany('Hotlistlog', array(
             'local' => 'id',
             'foreign' => 'from_id'));

        $this->hasMany('Blacklist', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Billing', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Interest', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Viewed', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Chat2Room', array(
             'local' => 'id',
             'foreign' => 'caller_id'));

        $this->hasMany('Chat2Message', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Chat2RoomUsers', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Chat2VideoLog', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}