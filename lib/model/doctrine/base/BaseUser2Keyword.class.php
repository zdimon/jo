<?php

/**
 * BaseUser2Keyword
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $keyword_id
 * @property integer $user_id
 * @property Keyword $Keyword
 * @property sfGuardUser $User
 * 
 * @method integer      getId()         Returns the current record's "id" value
 * @method integer      getKeywordId()  Returns the current record's "keyword_id" value
 * @method integer      getUserId()     Returns the current record's "user_id" value
 * @method Keyword      getKeyword()    Returns the current record's "Keyword" value
 * @method sfGuardUser  getUser()       Returns the current record's "User" value
 * @method User2Keyword setId()         Sets the current record's "id" value
 * @method User2Keyword setKeywordId()  Sets the current record's "keyword_id" value
 * @method User2Keyword setUserId()     Sets the current record's "user_id" value
 * @method User2Keyword setKeyword()    Sets the current record's "Keyword" value
 * @method User2Keyword setUser()       Sets the current record's "User" value
 * 
 * @package    levandos
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser2Keyword extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user2keyword');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('keyword_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Keyword', array(
             'local' => 'keyword_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}