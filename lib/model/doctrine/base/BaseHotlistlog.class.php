<?php

/**
 * BaseHotlistlog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $from_id
 * @property integer $to_id
 * @property integer $last_message_id
 * @property boolean $is_new_message
 * @property boolean $is_opened
 * @property boolean $is_active
 * @property sfGuardUser $FromUser
 * @property sfGuardUser $ToUser
 * @property Message $LastMessage
 * 
 * @method integer     getId()              Returns the current record's "id" value
 * @method integer     getFromId()          Returns the current record's "from_id" value
 * @method integer     getToId()            Returns the current record's "to_id" value
 * @method integer     getLastMessageId()   Returns the current record's "last_message_id" value
 * @method boolean     getIsNewMessage()    Returns the current record's "is_new_message" value
 * @method boolean     getIsOpened()        Returns the current record's "is_opened" value
 * @method boolean     getIsActive()        Returns the current record's "is_active" value
 * @method sfGuardUser getFromUser()        Returns the current record's "FromUser" value
 * @method sfGuardUser getToUser()          Returns the current record's "ToUser" value
 * @method Message     getLastMessage()     Returns the current record's "LastMessage" value
 * @method Hotlistlog  setId()              Sets the current record's "id" value
 * @method Hotlistlog  setFromId()          Sets the current record's "from_id" value
 * @method Hotlistlog  setToId()            Sets the current record's "to_id" value
 * @method Hotlistlog  setLastMessageId()   Sets the current record's "last_message_id" value
 * @method Hotlistlog  setIsNewMessage()    Sets the current record's "is_new_message" value
 * @method Hotlistlog  setIsOpened()        Sets the current record's "is_opened" value
 * @method Hotlistlog  setIsActive()        Sets the current record's "is_active" value
 * @method Hotlistlog  setFromUser()        Sets the current record's "FromUser" value
 * @method Hotlistlog  setToUser()          Sets the current record's "ToUser" value
 * @method Hotlistlog  setLastMessage()     Sets the current record's "LastMessage" value
 * 
 * @package    levandos
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHotlistlog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('jo_hotlistlog');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('from_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('to_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('last_message_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('is_new_message', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_opened', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as FromUser', array(
             'local' => 'from_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as ToUser', array(
             'local' => 'to_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Message as LastMessage', array(
             'local' => 'last_message_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}