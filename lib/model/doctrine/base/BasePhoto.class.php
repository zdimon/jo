<?php

/**
 * BasePhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $username
 * @property string $title
 * @property string $image
 * @property boolean $pub
 * @property boolean $is_main
 * @property boolean $is_private
 * @property integer $size
 * @property integer $partner_id
 * @property sfGuardUser $User
 * @property sfGuardUser $Partner
 * 
 * @method integer     getId()         Returns the current record's "id" value
 * @method integer     getUserId()     Returns the current record's "user_id" value
 * @method string      getUsername()   Returns the current record's "username" value
 * @method string      getTitle()      Returns the current record's "title" value
 * @method string      getImage()      Returns the current record's "image" value
 * @method boolean     getPub()        Returns the current record's "pub" value
 * @method boolean     getIsMain()     Returns the current record's "is_main" value
 * @method boolean     getIsPrivate()  Returns the current record's "is_private" value
 * @method integer     getSize()       Returns the current record's "size" value
 * @method integer     getPartnerId()  Returns the current record's "partner_id" value
 * @method sfGuardUser getUser()       Returns the current record's "User" value
 * @method sfGuardUser getPartner()    Returns the current record's "Partner" value
 * @method Photo       setId()         Sets the current record's "id" value
 * @method Photo       setUserId()     Sets the current record's "user_id" value
 * @method Photo       setUsername()   Sets the current record's "username" value
 * @method Photo       setTitle()      Sets the current record's "title" value
 * @method Photo       setImage()      Sets the current record's "image" value
 * @method Photo       setPub()        Sets the current record's "pub" value
 * @method Photo       setIsMain()     Sets the current record's "is_main" value
 * @method Photo       setIsPrivate()  Sets the current record's "is_private" value
 * @method Photo       setSize()       Sets the current record's "size" value
 * @method Photo       setPartnerId()  Sets the current record's "partner_id" value
 * @method Photo       setUser()       Sets the current record's "User" value
 * @method Photo       setPartner()    Sets the current record's "Partner" value
 * 
 * @package    levandos
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePhoto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('jo_photo');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('username', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('title', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('image', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('pub', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_main', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_private', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('size', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             ));
        $this->hasColumn('partner_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as Partner', array(
             'local' => 'partner_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}