<?php

/**
 * BaseChat2Message
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $content
 * @property integer $room_id
 * @property integer $user_id
 * @property integer $timer
 * @property boolean $is_read
 * @property integer $back_id
 * @property Chat2Room $Room
 * @property sfGuardUser $User
 * 
 * @method integer      getId()      Returns the current record's "id" value
 * @method string       getContent() Returns the current record's "content" value
 * @method integer      getRoomId()  Returns the current record's "room_id" value
 * @method integer      getUserId()  Returns the current record's "user_id" value
 * @method integer      getTimer()   Returns the current record's "timer" value
 * @method boolean      getIsRead()  Returns the current record's "is_read" value
 * @method integer      getBackId()  Returns the current record's "back_id" value
 * @method Chat2Room    getRoom()    Returns the current record's "Room" value
 * @method sfGuardUser  getUser()    Returns the current record's "User" value
 * @method Chat2Message setId()      Sets the current record's "id" value
 * @method Chat2Message setContent() Sets the current record's "content" value
 * @method Chat2Message setRoomId()  Sets the current record's "room_id" value
 * @method Chat2Message setUserId()  Sets the current record's "user_id" value
 * @method Chat2Message setTimer()   Sets the current record's "timer" value
 * @method Chat2Message setIsRead()  Sets the current record's "is_read" value
 * @method Chat2Message setBackId()  Sets the current record's "back_id" value
 * @method Chat2Message setRoom()    Sets the current record's "Room" value
 * @method Chat2Message setUser()    Sets the current record's "User" value
 * 
 * @package    levandos
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseChat2Message extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('jo_chat2_message');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('content', 'string', 2500, array(
             'type' => 'string',
             'length' => 2500,
             ));
        $this->hasColumn('room_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('timer', 'integer', 9, array(
             'type' => 'integer',
             'length' => 9,
             ));
        $this->hasColumn('is_read', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('back_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Chat2Room as Room', array(
             'local' => 'room_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}